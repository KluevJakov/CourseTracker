name: coursetracker-app

services:
  auth:
    build:
      context: ./auth-microservice
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ct
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_REDIS_HOST: redis
    depends_on:
      - db
      - redis

  course:
    build:
      context: ./course-microservice
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ctcourses
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      AUTH_SERVICE_URL: http://auth:8081
    depends_on:
      - db

  gw:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      CLIENT_AUTH_URL: http://auth:8081
      CLIENT_COURSE_URL: http://course:8082

  db:
    image: postgres:17.2
    container_name: postgresql_ct
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper_ct
    restart: unless-stopped
    environment:
      ZOO_CLIENT_PORT: 2181
      ZOO_TICK_TIME: 2000

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka_ct
    restart: unless-stopped
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  redis:
    image: redis:8.0.1
    container_name: redis_ct
    restart: unless-stopped
    ports:
      - "6379:6379"